- 사용한 패키지
    - react query
    - axios : fetch하는 adapter
    - js-cookie : 쿠키 만들어줌 
    - react-hook-form

- react query 5/4

todo 
- authentication user 5/6 [v]
- csrf [v]  5/6
- edit 조건 [v] 5/7
- upload review [v] 5/9
- My page [v] 5/10~5/11
- upload photo [v] 5/12
- upload gptphoto [v] 5/12
- 게시글 수정 [v] 5/13
- gpt photo 시간이 지내면 연결끊기는 문제 -> cloudflare로 전달 후 렌더링 해야할듯[v] 5/15
- api/gptcreate/gptphots/1 get/put 만들기 [v] 만들어서 put으로 데이터수정 -> medias/photos로 post
- 게시글 삭제 [v] api는 만들었는데 ui구현에서 조금 문제... 팝업이 작동을 안함
- signup []

- movie []
- gpt 해시태그[]





문제
- id_liked의 하트가 로그아웃때만 바로 반영이되고 로그인할때는 바로 반영이 안됨 (fetch문제) 
    --> refetchQueries로 처리 [v]

    
- 일반 photo 업로드 : 사용자가 웹에서 이미지 업로드 -> cloudflare 서버로 업로드 -> 백엔드 서버에 저장 후 렌더링
- gpt 이미지 업로드 : 웹에서 post로 요청하면 서버에서 gpt이미지 생성 -> cloudflare 업로드 -> cloudflare의 주소로 다시 이미지 렌더링 

- createGptURLMutation -> uploadGptImageMutation -> CreateGptPhotoMutation

나중에 시간되면 할 것
- github login []
- 카카오톡 login []



//원래 bookdetail 코드
        {[0, 1].map((index) => (
          <GridItem colSpan={1} rowSpan={1} overflow={"hidden"} key={index}>
            <Skeleton isLoaded={!isLoading} h="100%" w="100%">
              {data?.photos && data.photos.length > 0 ? (
                <Image
                  objectFit={"cover"}
                  w="100%"
                  h="100%"
                  src={data?.photos[index].file}
                />
              ) : null}
            </Skeleton>
          </GridItem>
        ))}